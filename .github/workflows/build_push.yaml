name: build-push

on:
  push:

env:
  TAG_NAME: nounify:${{ github.sha }}
  BUILD_VERSION: ${{ github.sha }}
  GITHUB_IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/nounify
  GITHUB_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/nounify:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Get the tag or commit id
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
          # If a tag is present, strip the 'refs/tags/' prefix
          TAG_OR_COMMIT=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          echo "This is a tag: $TAG_OR_COMMIT"
          else
          # If no tag is present, use the commit SHA
          TAG_OR_COMMIT=$(echo $GITHUB_SHA)
          echo "This is a commit SHA: $TAG_OR_COMMIT"
          fi
          # Set the variable for use in other steps
          echo "TAG_OR_COMMIT=$TAG_OR_COMMIT" >> $GITHUB_OUTPUT
        shell: bash
      - name: Build and push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          push: true
          tags: ${{ env.GITHUB_IMAGE_NAME }}
          build-args: |
            BUILD_VERSION=${{ steps.version.outputs.TAG_OR_COMMIT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Rename image
        run: docker tag ${{ env.TAG_NAME }} ${{ env.GITHUB_IMAGE_NAME }}
      - name: Push image
        run: docker push ${{ env.GITHUB_IMAGE_NAME }}

  push-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: extract tag
        id: tag
        run: |
          TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Docker image
        run: docker pull ${{ env.GITHUB_IMAGE_NAME }}
      - name: Rename Docker image (tag name)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GITHUB_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Rename Docker image (latest)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GITHUB_IMAGE_REPO }}:latest"
      - name: Push Docker image (tag name)
        run: docker push "${{ env.GITHUB_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Push Docker image (latest)
        run: docker push "${{ env.GITHUB_IMAGE_REPO }}:latest"
